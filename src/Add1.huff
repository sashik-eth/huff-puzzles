
/** 
 *  ADD HUFF EXERCISE
 *
 *  When writing solidity, we most times have to perform some mathematical operations like addition etc
 *  
 *  The task is to write within the `MAIN` macro below, a function that takes in a uint256, adds 1 to it and returns the new value
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function add1(uint256) payable returns(uint256)


#define macro MAIN() = takes(0) returns(0) {

    0x0 calldataload
    0xe0 shr
    __FUNC_SIG(add1) eq add1 jumpi

    0x0 0x0 revert

    add1:
        0x4 calldataload
        0x1 add
        0x0 mstore 
        0x20 0x0 return
}