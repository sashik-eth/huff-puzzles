
/** 
 *  MULTIPLY HUFF EXERCISE
 *
 *  When writing solidity, we most times have to perform some mathematical operations like multiplication etc
 *  
 *  The task is to write within the `MAIN` macro below, a function named `multiply` that takes in 2 uint256s, and returns their product. Be sure to revert on overflow
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function multiply(uint256, uint256) payable returns(uint256)


#define macro MAIN() = takes(0) returns(0) {
    0x0 calldataload
    0xe0 shr
    __FUNC_SIG(multiply) eq multiply jumpi

    rev:
        0x0 0x0 revert

    multiply:
        0x4 calldataload
        dup1 iszero ret0 jumpi
        0x24 calldataload
        dup1 iszero ret0 jumpi
        dup1 dup3
        mul
        swap2 dup3 
        div
        eq iszero
        rev jumpi
        0x0 mstore 
        0x20 0x0 return

    ret0:
        0x0 0x0 mstore
        0x20 0x0 return
}