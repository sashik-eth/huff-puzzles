/** 
 *  BASIC_BANK HUFF EXERCISE
 *  
 *  The task is to create a basic bank with huff
 * functionalities include
 *      - depositing tokens via similar to how solidity's `receive` function works
 *      - withdrawing tokens
 *      - keeping track of and viewing balance
 */

#define function balanceOf(address) payable returns(uint256)
#define function withdraw(uint256) payable returns()

#define macro MAIN() = takes(0) returns(0) {
    0x0 calldataload
    0xe0 shr
    dup1 __FUNC_SIG(balanceOf) eq balanceOf jumpi
    __FUNC_SIG(withdraw) eq withdraw jumpi

    caller
    sload
    callvalue
    add
    caller
    sstore
    0x0 0x0 return

    balanceOf:
        BALANCE_OF()
    withdraw:
        WITHDRAW()
}

#define macro BALANCE_OF() = takes(0) returns(0) {
    0x04 calldataload
    sload
    0x0 mstore
    0x20 0x0 return
}

#define macro WITHDRAW() = takes(0) returns(0) {
    0x0 0x0 0x0 0x0 
    0x04 calldataload
    caller
    sload
    dup1 dup3 
    gt rev jumpi
    sub
    caller
    sstore
    0x04 calldataload
    caller
    gas
    call
    stop
    rev:
        0x0 0x0 revert
}

